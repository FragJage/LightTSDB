language: cpp

compiler: gcc
env:
  global:
    - COMPILER=g++-4.9
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "eEYGVxNyhjMb1RQPBS/oTzdgCofxoOtjXPDLr2xfB2+sOJARiZYMf3Czc+1Ma3O+CZS9Qmjjk5msvtu1vXqJhQR5AjXpCcYCHm7pP6V3BbMPLakAry5TRiV1sxGLkWHD7Te6jr5DWEI2yyGUDs6sVPvWvJ88UAuHppYmnSgLYHg="

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test']
    packages: ['g++-4.9','valgrind']
  coverity_scan:
    project:
      name: "FragJage/LightTSDB"
      description: "Light time series database class"
    notification_email: inscrip.jage@free.fr
    build_command_prepend: "cov-configure --comptype g++ --compiler $COMPILER --template && cmake . -G'Unix Makefiles' -DCMAKE_CXX_COMPILER=$(which $COMPILER)"
    build_command: "make"
    branch_pattern: coverity_branch
    
install:
  - pip install --user git+git://github.com/eddyxu/cpp-coveralls.git
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

script:
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then cmake . -G"Unix Makefiles" -DCMAKE_CXX_COMPILER=$(which $COMPILER); fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then make; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ./test/bin/unittest; fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then valgrind --error-exitcode=1 --leak-check=full ./test/bin/unittest; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then sudo pip install -U "cpp-coveralls"; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then coveralls --include src --gcov-options '\-lp' --gcov 'gcov-4.9'; fi
